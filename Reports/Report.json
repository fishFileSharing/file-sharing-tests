{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-12-30T17:43:56.849Z",
    "end": "2024-12-30T17:44:00.934Z",
    "duration": 4085,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e5e1fa43-61b3-4329-bcd8-8a6d6e323789",
      "title": "",
      "fullFile": "/Users/oh/Desktop/Repos/FileSharing/file-sharing-tests/test/2_select_a_file.js",
      "file": "/test/2_select_a_file.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3b72d46b-f397-40ff-99d7-d5bdbafaea4b",
          "title": "Select a file and check if it's name appears on page",
          "fullFile": "/Users/oh/Desktop/Repos/FileSharing/file-sharing-tests/test/2_select_a_file.js",
          "file": "/test/2_select_a_file.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Select a file and check if it's name appears on page\"",
              "fullTitle": "Select a file and check if it's name appears on page \"before each\" hook in \"Select a file and check if it's name appears on page\"",
              "timedOut": false,
              "duration": 1221,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(\"MicrosoftEdge\").build()",
              "err": {},
              "uuid": "b9a1dc00-03d2-4de9-86d9-25b78afa6fa7",
              "parentUUID": "3b72d46b-f397-40ff-99d7-d5bdbafaea4b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Select a file and check if it's name appears on page\"",
              "fullTitle": "Select a file and check if it's name appears on page \"after each\" hook in \"Select a file and check if it's name appears on page\"",
              "timedOut": false,
              "duration": 67,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n  await driver.quit()\n}",
              "err": {},
              "uuid": "6bea743a-105c-4608-b69f-266067d70f0c",
              "parentUUID": "3b72d46b-f397-40ff-99d7-d5bdbafaea4b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should open https://file-sharing-dev.netlify.app/ and check for title",
              "fullTitle": "Select a file and check if it's name appears on page should open https://file-sharing-dev.netlify.app/ and check for title",
              "timedOut": false,
              "duration": 2794,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(10000)\nawait driver.get(\"https://file-sharing-dev.netlify.app/\")\nawait driver.sleep(1000)\nlet selectFilesInput = await driver.wait(\n  until.elementLocated(By.css('[data-testid=\"select-files-input\"]')),\n  5000\n)\nconst filePath = path.join(__dirname, \"..\", \"test_files\", \"1.pdf\")\nselectFilesInput.sendKeys(filePath)\nawait driver.sleep(1000)\nlet selectedFileName = await driver.wait(\n  until.elementLocated(By.css('[data-testid=\"selected-file-name\"]')),\n  5000\n)\nlet selectedFileNameText = await selectedFileName.getText()\nassert(\n  selectedFileNameText.includes(\"1.pdf\", \"Something is wrong with filename\")\n)",
              "err": {},
              "uuid": "f4623308-f311-4dac-adcd-fd5169f14c5e",
              "parentUUID": "3b72d46b-f397-40ff-99d7-d5bdbafaea4b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f4623308-f311-4dac-adcd-fd5169f14c5e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2794,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "Report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "Reports",
        "reportFilename": "Report"
      },
      "version": "6.2.0"
    }
  }
}